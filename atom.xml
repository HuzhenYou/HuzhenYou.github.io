<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>九万里</title>
  
  <subtitle>虚怀若谷，大智若愚</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huzhenyou.github.io/"/>
  <updated>2023-07-23T14:04:58.660Z</updated>
  <id>https://huzhenyou.github.io/</id>
  
  <author>
    <name>AngryBirds</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux&amp;system</title>
    <link href="https://huzhenyou.github.io//blog/2022/12/Linux-system.html"/>
    <id>https://huzhenyou.github.io//blog/2022/12/Linux-system.html</id>
    <published>2022-12-07T03:35:51.000Z</published>
    <updated>2023-07-23T14:04:58.660Z</updated>
    
    <content type="html"><![CDATA[<p>Linux操作的经验记录。</p><a id="more"></a><h1 id="操作普通文件"><a href="#操作普通文件" class="headerlink" title="操作普通文件"></a>操作普通文件</h1><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a><strong>ls</strong></h2><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><p>Linux 查看目录下文件的详细信息：ls -l 或 ll</p><p>以人性化的方式显示文件大小格式：ll -h</p><p>查看当前目录下的所有文件: ls -a </p><p>查看所有文件的详细信息，每一行是一个文件的所有信息:ls -a -l ，可缩写为 ls -al</p><p>查看所有文件的详细信息，区别是文件大小的显示方式: ls -a -l -h</p><h3 id="列出前N个文件"><a href="#列出前N个文件" class="headerlink" title="列出前N个文件"></a><strong>列出前N个文件</strong></h3><p>ls | head -5</p><h3 id="后N个"><a href="#后N个" class="headerlink" title="后N个"></a><strong>后N个</strong></h3><p>ls | tail -5</p><h3 id="从第N行到第M行"><a href="#从第N行到第M行" class="headerlink" title="从第N行到第M行"></a><strong>从第N行到第M行</strong></h3><p><em># N, M = 2, 5</em></p><p>!ls | head -5 | tail -3</p><p>参考文档： <a href="https://bbs.csdn.net/topics/370095630" target="_blank" rel="noopener">https://bbs.csdn.net/topics/370095630</a></p><h3 id="只显示指定文件"><a href="#只显示指定文件" class="headerlink" title="只显示指定文件"></a>只显示指定文件</h3><p>ls | grep -E ‘python*’</p><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><h3 id="默认覆盖拷贝："><a href="#默认覆盖拷贝：" class="headerlink" title="默认覆盖拷贝："></a>默认覆盖拷贝：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\cp -rf zongguofeng linuxzgf</span><br></pre></td></tr></table></figure><h1 id="给文件赋权限"><a href="#给文件赋权限" class="headerlink" title="给文件赋权限"></a>给文件赋权限</h1><p>chmod 777 file</p><p>7 = 4(r) + 2(w) + 1(x)</p><p>位置：owner, group, others.</p><h1 id="加端口的scp"><a href="#加端口的scp" class="headerlink" title="加端口的scp"></a><strong>加端口的scp</strong></h1><p>scp -P 12349 upload_file username@server</p><p>scp -P 12349 username@server:file_path dst_dir</p><h1 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h1><h2 id="nohup-no-hang-up"><a href="#nohup-no-hang-up" class="headerlink" title="nohup(no hang up)"></a>nohup(no hang up)</h2><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p>nohup ./test.sh &gt; hohup.out 2&gt;&amp;1 &amp;</p><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><h2 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h2><h3 id="根据进程号"><a href="#根据进程号" class="headerlink" title="根据进程号"></a>根据进程号</h3><ol><li>查进程号：<br>ps -aux | grep “test.sh”参数说明：<br>a : 显示所有程序<br>u : 以用户为主的格式来显示<br>x : 显示所有程序，不区分终端机<br>或者： ps -def | grep “runoob.sh”</li><li>kill pid: kill -9  进程号PID</li></ol><h3 id="根据进程名"><a href="#根据进程名" class="headerlink" title="根据进程名"></a>根据进程名</h3><p>pkill 进程名</p><h3 id="杀死某用户下所有进程"><a href="#杀死某用户下所有进程" class="headerlink" title="杀死某用户下所有进程:"></a>杀死某用户下所有进程:</h3><p>pgrep -u root | sudo xargs kill -9</p><h3 id="ps-ef-grep-进程ID"><a href="#ps-ef-grep-进程ID" class="headerlink" title="ps -ef|grep 进程ID:"></a>ps -ef|grep 进程ID:</h3><p>最近GPU上某些进程杀不死，查了一下说是因为父进程虽然kill了，但是子进程的内存还没有释放。因此要重新杀死父进程，我们通过  ps -ef|grep 进程ID  ，来查找其父进程。然后再使用    kill -9 父进程ID  来杀死。</p><h2 id="显示command全称"><a href="#显示command全称" class="headerlink" title="显示command全称"></a>显示command全称</h2><p>top -c</p><h1 id="查看目录信息"><a href="#查看目录信息" class="headerlink" title="查看目录信息"></a>查看目录信息</h1><h2 id="查看各nas盘剩余空间"><a href="#查看各nas盘剩余空间" class="headerlink" title="查看各nas盘剩余空间"></a>查看各nas盘剩余空间</h2><p>df -h<br>或者<br>df -h  |grep  pa011-pa009</p><h2 id="查看文件夹所占空间："><a href="#查看文件夹所占空间：" class="headerlink" title="查看文件夹所占空间："></a><strong>查看文件夹所占空间：</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">du -csh * .[^.]*   (可用于unix和linux)   </span><br><span class="line">du -h --max-depth=1 (仅可用于linux)</span><br></pre></td></tr></table></figure><h1 id="设置系统默认编码utf-8"><a href="#设置系统默认编码utf-8" class="headerlink" title="设置系统默认编码utf-8"></a><strong>设置系统默认编码utf-8</strong></h1><p>export LC_ALL=”zh_CH.UTF-8”</p><p>查看系统默认编码：locale</p><h1 id="递归创建文件夹"><a href="#递归创建文件夹" class="headerlink" title="递归创建文件夹"></a><strong>递归创建文件夹</strong></h1><p>mkdir -p dst_dir</p><h1 id="防止time-out的文件下载："><a href="#防止time-out的文件下载：" class="headerlink" title="防止time out的文件下载："></a><strong>防止time out的文件下载：</strong></h1><p>wget -c url</p><h1 id="保存文件夹的目录结构到文档"><a href="#保存文件夹的目录结构到文档" class="headerlink" title="保存文件夹的目录结构到文档"></a><strong>保存文件夹的目录结构到文档</strong></h1><p>!tree some_dir &gt; test.txt</p><h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a><strong>shell</strong></h1><h2 id="查看有哪些shell"><a href="#查看有哪些shell" class="headerlink" title="查看有哪些shell"></a><strong>查看有哪些shell</strong></h2><p>第一种：chsh -l</p><p>第二种：cat /etc/shells</p><p>注：chsh需要apt install</p><h2 id="查看正在使用的shell"><a href="#查看正在使用的shell" class="headerlink" title="查看正在使用的shell"></a><strong>查看正在使用的shell</strong></h2><p>echo $SHELL</p><h2 id="修改我的shell为zsh"><a href="#修改我的shell为zsh" class="headerlink" title="修改我的shell为zsh"></a><strong>修改我的shell为zsh</strong></h2><p>chsh -s /bin/zsh</p><p>若没改变，则重启shell</p><p>chsh -s其实修改了/etc/passwd文件中和你用户名相对应的那一行.</p><p>cat /etc/passwd|grep ^root</p><p>参考文档：<a href="https://blog.csdn.net/jiaoyongqing134/article/details/53668667" target="_blank" rel="noopener">https://blog.csdn.net/jiaoyongqing134/article/details/53668667</a></p><h1 id="cat"><a href="#cat" class="headerlink" title="cat"></a><strong>cat</strong></h1><ol><li>cat test.txt: 一次显示整个文件。</li><li>cat &gt; test.txt: 创建文件并往其中写东西。</li><li>cat test1.txt test2.txt &gt; test_sum.txt: 将几个文件合并为一个。</li></ol><h1 id="grep-查找包含某关键字内容的文件"><a href="#grep-查找包含某关键字内容的文件" class="headerlink" title="grep: 查找包含某关键字内容的文件"></a>grep: <strong>查找包含某关键字内容的文件</strong></h1><p>grep: Gloabal Regular Expression Print</p><h2 id="非递归查找"><a href="#非递归查找" class="headerlink" title="非递归查找"></a><strong>非递归查找</strong></h2><p>grep -r “test” /tmp</p><h2 id="递归查找"><a href="#递归查找" class="headerlink" title="递归查找"></a><strong>递归查找</strong></h2><p>grep -R —include=”*.py” “Key” /tmp</p><h2 id="不区分大小写的搜索"><a href="#不区分大小写的搜索" class="headerlink" title="不区分大小写的搜索"></a><strong>不区分大小写的搜索</strong></h2><p>grep -i “Key” /tmp</p><h2 id="只列出匹配出的文件名"><a href="#只列出匹配出的文件名" class="headerlink" title="只列出匹配出的文件名"></a><strong>只列出匹配出的文件名</strong></h2><p>grep -l “Key” /tmp</p><h2 id="列出不匹配的文件名"><a href="#列出不匹配的文件名" class="headerlink" title="列出不匹配的文件名"></a><strong>列出不匹配的文件名</strong></h2><p>grep -L “Key” /tmp</p><h2 id="只匹配整个单词，不是字符串一部分"><a href="#只匹配整个单词，不是字符串一部分" class="headerlink" title="只匹配整个单词，不是字符串一部分"></a><strong>只匹配整个单词，不是字符串一部分</strong></h2><p>grep -w “Key” /tmp</p><h2 id="匹配的上下分别显示10行"><a href="#匹配的上下分别显示10行" class="headerlink" title="匹配的上下分别显示10行"></a><strong>匹配的上下分别显示10行</strong></h2><p>grep -C 10 “Key” /tmp</p><h2 id="显示匹配同时包含“Key”和“is”-的行"><a href="#显示匹配同时包含“Key”和“is”-的行" class="headerlink" title="显示匹配同时包含“Key”和“is” 的行"></a><strong>显示匹配同时包含“Key”和“is” 的行</strong></h2><p>grep “Key” /tmp|grep “is”</p><h2 id="显示匹配“Key”或“def”-的行"><a href="#显示匹配“Key”或“def”-的行" class="headerlink" title="显示匹配“Key”或“def” 的行"></a><strong>显示匹配“Key”或“def” 的行</strong></h2><p>grep “Key\|def” /tmp</p><h2 id="只匹配开头包含关键字的行"><a href="#只匹配开头包含关键字的行" class="headerlink" title="只匹配开头包含关键字的行"></a><strong>只匹配开头包含关键字的行</strong></h2><p>cat /etc/passwd | grep ^root</p><h2 id="忽略子目录："><a href="#忽略子目录：" class="headerlink" title="忽略子目录："></a><strong>忽略子目录：</strong></h2><p>grep -d /tmp/tmp1</p><h1 id="Remote"><a href="#Remote" class="headerlink" title="Remote"></a>Remote</h1><h2 id="生成公钥、私钥"><a href="#生成公钥、私钥" class="headerlink" title="生成公钥、私钥"></a>生成公钥、私钥</h2><ol><li>ssh-keygen， 一路回车。</li><li>cd ~/.ssh</li><li>cat id_rsa.pub &gt; authorized_keys</li></ol><p>注：非root用户的话，需给authorized_keys赋权限，即：<br>chmod 600 authorized_keys &amp;&amp; cd ../ &amp;&amp; chmod 700 -R .ssh</p><h2 id="利用私钥登陆远程"><a href="#利用私钥登陆远程" class="headerlink" title="利用私钥登陆远程"></a><strong>利用私钥登陆远程</strong></h2><p>chmod 400 私钥路径 &amp;&amp; shh -p 666 -i 私钥路径 root@30.99.134.236</p><h2 id="在scp时指定密码"><a href="#在scp时指定密码" class="headerlink" title="在scp时指定密码"></a><strong>在scp时指定密码</strong></h2><p>sshpass -p “password” scp file1.txt root@192.168.1.100:/mnt/</p><p>Mac安装sshpass: brew install hudochenkov/sshpass/sshpass</p><p>参考文档： <a href="https://www.51cto.com/article/710389.html" target="_blank" rel="noopener">https://www.51cto.com/article/710389.html</a></p><p><a href="https://stackoverflow.com/questions/32255660/how-to-install-sshpass-on-mac" target="_blank" rel="noopener">https://stackoverflow.com/questions/32255660/how-to-install-sshpass-on-mac</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Host sf</span><br><span class="line"></span><br><span class="line">    HostName 30.79.129.22</span><br><span class="line"></span><br><span class="line">    User youjincheng749</span><br><span class="line"></span><br><span class="line">    IdentityFile ~/.ssh/sf</span><br><span class="line"></span><br><span class="line">Host sf_gpu</span><br><span class="line"></span><br><span class="line">    HostName 30.75.192.94</span><br><span class="line"></span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_sf_gpu</span><br><span class="line"></span><br><span class="line">    User root </span><br><span class="line"></span><br><span class="line">    Port 37019</span><br><span class="line"></span><br><span class="line">    ProxyCommand ssh -W %h:%p sf</span><br></pre></td></tr></table></figure><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="变更-文件夹-所有者"><a href="#变更-文件夹-所有者" class="headerlink" title="变更 文件夹 所有者"></a>变更 文件夹 所有者</h2><ol><li>chown -R 用户名:用户组 /tmp</li><li>chmod -R 775 /tmp<br>如：<br>oracle为用户， oinstall为用户组， 可去掉用户组<br>chown -R oracle:oinstall /opt/oracle/</li></ol><h2 id="用户与组的操作"><a href="#用户与组的操作" class="headerlink" title="用户与组的操作"></a>用户与组的操作</h2><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p>useradd yjc<br>注：创建用户时，会同时创建与用户名同名的用户组。</p><h4 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h4><p>passwd yjc<br># passwd root</p><h3 id="添加组"><a href="#添加组" class="headerlink" title="添加组"></a>添加组</h3><p>groupadd groupName</p><h3 id="查看当前登录用户"><a href="#查看当前登录用户" class="headerlink" title="查看当前登录用户"></a>查看当前登录用户</h3><p>whoami</p><h3 id="查看当前用户所在组"><a href="#查看当前用户所在组" class="headerlink" title="查看当前用户所在组"></a>查看当前用户所在组</h3><p>groups</p><h3 id="查看指定用户所在组"><a href="#查看指定用户所在组" class="headerlink" title="查看指定用户所在组"></a>查看指定用户所在组</h3><p>groups userName</p><h3 id="将用户添加到组"><a href="#将用户添加到组" class="headerlink" title="将用户添加到组"></a>将用户添加到组</h3><p>usermod -a -G groupName userName</p><h3 id="从组中删除用户"><a href="#从组中删除用户" class="headerlink" title="从组中删除用户"></a>从组中删除用户</h3><p>gpasswd groupName -d userName</p><h3 id="查看所有用户"><a href="#查看所有用户" class="headerlink" title="查看所有用户"></a>查看所有用户</h3><p>cat /etc/passwd</p><h3 id="查看指定用户"><a href="#查看指定用户" class="headerlink" title="查看指定用户"></a>查看指定用户</h3><p>cat /etc/passwd|grep userName</p><h3 id="查看所有组"><a href="#查看所有组" class="headerlink" title="查看所有组"></a>查看所有组</h3><p>cat /etc/group</p><h3 id="查看指定组"><a href="#查看指定组" class="headerlink" title="查看指定组"></a>查看指定组</h3><p>cat /etc/group|grep groupName</p><h3 id="删除组"><a href="#删除组" class="headerlink" title="删除组"></a>删除组</h3><p>groupdel groupName</p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>userdel userName</p><h3 id="彻底删除用户"><a href="#彻底删除用户" class="headerlink" title="彻底删除用户"></a>彻底删除用户</h3><p>userdel -rf userName</p><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><div class="table-container"><table><thead><tr><th>权限</th><th style="text-align:left">数字</th><th style="text-align:right">计算</th></tr></thead><tbody><tr><td>—-</td><td style="text-align:left">0</td><td style="text-align:right">0 + 0 + 0</td></tr><tr><td>r—</td><td style="text-align:left">4</td><td style="text-align:right">4 + 0 + 0</td></tr><tr><td>-w-</td><td style="text-align:left">2</td><td style="text-align:right">0 + 2 + 0</td></tr><tr><td>—x</td><td style="text-align:left">1</td><td style="text-align:right">0 + 0 + 1</td></tr><tr><td>rw-</td><td style="text-align:left">6</td><td style="text-align:right">4 + 2 + 0</td></tr><tr><td>-wx</td><td style="text-align:left">3</td><td style="text-align:right">0 + 2 + 1</td></tr><tr><td>r-x</td><td style="text-align:left">5</td><td style="text-align:right">4 + 0 + 1</td></tr><tr><td>rwx</td><td style="text-align:left">7</td><td style="text-align:right">4 + 2 + 1</td></tr></tbody></table></div><p>r：读  w：写  x：执行<br>三组访问权限：所有者的权限，群组用户的权限，其他用户的权限</p><p>参考文档：<a href="https://blog.csdn.net/liyongbing1122/article/details/79204479" target="_blank" rel="noopener">https://blog.csdn.net/liyongbing1122/article/details/79204479</a></p><h1 id="查看文件夹的权限。"><a href="#查看文件夹的权限。" class="headerlink" title="查看文件夹的权限。"></a><strong>查看文件夹的权限。</strong></h1><p>ls -la /tmp</p><h1 id="创建快捷方式-软链接"><a href="#创建快捷方式-软链接" class="headerlink" title="创建快捷方式(软链接)"></a><strong>创建快捷方式(软链接)</strong></h1><p>ln -s real_source dts_dir</p><h1 id="tail"><a href="#tail" class="headerlink" title="tail"></a><strong>tail</strong></h1><h2 id="tail-3-test-txt"><a href="#tail-3-test-txt" class="headerlink" title="tail -3 test.txt"></a>tail -3 test.txt</h2><p>显示最后三行</p><h1 id="hosts"><a href="#hosts" class="headerlink" title="hosts"></a><strong>hosts</strong></h1><h2 id="加快域名解析"><a href="#加快域名解析" class="headerlink" title="加快域名解析"></a><strong>加快域名解析</strong></h2><p>通过hosts中的域名和ip的对应关系，可快速访问网站，无需请求网站上的DNS服务器。</p><h2 id="方便局域网用户"><a href="#方便局域网用户" class="headerlink" title="方便局域网用户"></a><strong>方便局域网用户</strong></h2><p>在局域网总，给ip起一个名字，方便访问。</p><h2 id="屏蔽网站"><a href="#屏蔽网站" class="headerlink" title="屏蔽网站"></a><strong>屏蔽网站</strong></h2><p>把需要屏蔽的网站域名映射到127.0.0.1或0.0.0.0</p><h1 id="curl-下载文件"><a href="#curl-下载文件" class="headerlink" title="curl 下载文件"></a>curl 下载文件</h1><p>curl -o 1.jpg www.xxxxxx.jpg</p><h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a><strong>vim</strong></h1><h2 id="反撤销、-撤销"><a href="#反撤销、-撤销" class="headerlink" title="反撤销、 撤销"></a><strong>反撤销、 撤销</strong></h2><p>反撤销： ctrl+r</p><p>撤销：u</p><h2 id="翻页"><a href="#翻页" class="headerlink" title="翻页"></a>翻页</h2><p>ctr+f ： forward</p><p>ctr+b ：backward</p><h2 id="jump"><a href="#jump" class="headerlink" title="jump"></a>jump</h2><p>Step forward: digit+w</p><p>Step backward: digit+b</p><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><ol><li>Normal mode,  after input: <code>/</code>, input the word needet to find.</li><li>Press  <code>n</code> to find the next.</li><li>Press  <code>N</code> to find the previous.</li></ol><h2 id="Replace"><a href="#Replace" class="headerlink" title="Replace"></a>Replace</h2><p><code>:s</code>（substitute）命令用来查找和替换字符串。语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</span><br></pre></td></tr></table></figure><p>例如 <code>:%s/foo/bar/g</code> 会在全局范围(<code>%</code>)查找 <code>foo</code> 并替换为 <code>bar</code>，所有出现都会被替换（<code>g</code>）。</p><p><strong>Refs:</strong> <a href="https://harttle.land/2016/08/08/vim-search-in-file.html#header-5" target="_blank" rel="noopener">https://harttle.land/2016/08/08/vim-search-in-file.html#header-5</a></p><h1 id="查看linux-系统版本"><a href="#查看linux-系统版本" class="headerlink" title="查看linux 系统版本"></a><strong>查看linux 系统版本</strong></h1><h2 id="方法1：-cat-etc-os-release"><a href="#方法1：-cat-etc-os-release" class="headerlink" title="方法1： cat /etc/os-release"></a><strong>方法1： cat /etc/os-release</strong></h2><h2 id="方法2-lsb-release-a"><a href="#方法2-lsb-release-a" class="headerlink" title="方法2: lsb_release -a"></a><strong>方法2: lsb_release -a</strong></h2><h2 id="方法3-cat-proc-version"><a href="#方法3-cat-proc-version" class="headerlink" title="方法3: cat /proc/version"></a><strong>方法3: cat /proc/version</strong></h2><h1 id="Linux-要如何查看系统架构："><a href="#Linux-要如何查看系统架构：" class="headerlink" title="Linux 要如何查看系统架构："></a><strong>Linux 要如何查看系统架构：</strong></h1><p>uname 命令 uname -m 直接显示Linux 系统架构:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/content# uname -m  </span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><h1 id="查看当前用户"><a href="#查看当前用户" class="headerlink" title="查看当前用户"></a><strong>查看当前用户</strong></h1><p>whoami</p><h1 id="查看指定用户进程"><a href="#查看指定用户进程" class="headerlink" title="查看指定用户进程"></a><strong>查看指定用户进程</strong></h1><p>ps  -u featurize u</p><p>注： ps aux 后面的三个参数可以轮流看一下</p><h1 id="带端口文件转发"><a href="#带端口文件转发" class="headerlink" title="带端口文件转发"></a><strong>带端口文件转发</strong></h1><p>scp -P 38461 featurize@workspace.featurize.cn:/home/featurize/work/anaconda3/envs_copy.zip .</p><h1 id="持续观测"><a href="#持续观测" class="headerlink" title="持续观测"></a><strong>持续观测</strong></h1><p>watch -n 1 -d nvidia-smi</p><h1 id="测试命令执行时间"><a href="#测试命令执行时间" class="headerlink" title="测试命令执行时间"></a><strong>测试命令执行时间</strong></h1><p>time pip install package</p><h1 id="压缩-amp-解压。"><a href="#压缩-amp-解压。" class="headerlink" title="压缩 &amp; 解压。"></a>压缩 &amp; 解压。</h1><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><h3 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">tar命令详解</span><br><span class="line"></span><br><span class="line">-c: 建立压缩档案</span><br><span class="line"></span><br><span class="line">-x：解压</span><br><span class="line"></span><br><span class="line">-t：查看内容</span><br><span class="line"></span><br><span class="line">-r：向压缩归档文件末尾追加文件</span><br><span class="line"></span><br><span class="line">-u：更新原压缩包中的文件</span><br><span class="line"></span><br><span class="line">这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。</span><br><span class="line"></span><br><span class="line">下面的参数是根据需要在压缩或解压档案时可选的。</span><br><span class="line"></span><br><span class="line">-z：有gzip属性的</span><br><span class="line"></span><br><span class="line">-j：有bz2属性的</span><br><span class="line"></span><br><span class="line">-Z：有compress属性的</span><br><span class="line"></span><br><span class="line">-v：显示所有过程</span><br><span class="line"></span><br><span class="line">-O：将文件解开到标准输出</span><br><span class="line"></span><br><span class="line">参数-f是必须的</span><br><span class="line"></span><br><span class="line">-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</span><br><span class="line"></span><br><span class="line"># tar -cf all.tar *.jpg 这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</span><br><span class="line"># tar -rf all.tar *.gif 这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。 </span><br><span class="line"># tar -uf all.tar logo.gif 这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。 </span><br><span class="line"># tar -tf all.tar 这条命令是列出all.tar包中所有文件，-t是列出文件的意思 </span><br><span class="line"># tar -xf all.tar 这条命令是解出all.tar包中所有文件，-x是解开的意思</span><br><span class="line"></span><br><span class="line">查看</span><br><span class="line">tar -tf aaa.tar.gz   在不解压的情况下查看压缩包的内容</span><br><span class="line"></span><br><span class="line">压缩</span><br><span class="line"></span><br><span class="line">tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg</span><br><span class="line"></span><br><span class="line">tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</span><br><span class="line"></span><br><span class="line">tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</span><br><span class="line"></span><br><span class="line">tar –cZf jpg.tar.Z *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</span><br><span class="line"></span><br><span class="line">解压</span><br><span class="line"></span><br><span class="line">tar –xvf file.tar //解压 tar包</span><br><span class="line"></span><br><span class="line">tar -xzvf file.tar.gz //解压tar.gz</span><br><span class="line"></span><br><span class="line">tar -xjvf file.tar.bz2   //解压 tar.bz2tar –xZvf file.tar.Z //解压tar.Z</span><br><span class="line"></span><br><span class="line">总结</span><br><span class="line"></span><br><span class="line">1、*.tar 用 tar –xvf 解压</span><br><span class="line"></span><br><span class="line">2、*.gz 用 gzip -d或者gunzip 解压</span><br><span class="line"></span><br><span class="line">3、*.tar.gz和*.tgz 用 tar –xzf 解压</span><br><span class="line"></span><br><span class="line">4、*.bz2 用 bzip2 -d或者用bunzip2 解压</span><br><span class="line"></span><br><span class="line">5、*.tar.bz2用tar –xjf 解压</span><br><span class="line"></span><br><span class="line">6、*.Z 用 uncompress 解压</span><br><span class="line"></span><br><span class="line">7、*.tar.Z 用tar –xZf 解压</span><br></pre></td></tr></table></figure><h3 id="显示进度信息"><a href="#显示进度信息" class="headerlink" title="显示进度信息"></a>显示进度信息</h3><p>使用前需安装pv.<br><code>tar -cf - “要压缩的文件或者目录路径”| pv -s $(($(du -sk “要压缩的文件或者目录路径” | awk &#39;{print $1}&#39;) * 1024)) | gzip &gt; {输出的文件名}.tar.gz</code><br>或者用：<br><code>tar -cf - $dir_name | pv -s $(du -sb $dir_name | awk &#39;{print $1}&#39;) | gzip &gt; $dir_name.tar.gz</code><br>参考文档：  <a href="https://blog.csdn.net/zhizhengguan/article/details/113405053" target="_blank" rel="noopener">https://blog.csdn.net/zhizhengguan/article/details/113405053</a></p><h3 id="压缩时排除某文件或文件夹"><a href="#压缩时排除某文件或文件夹" class="headerlink" title="压缩时排除某文件或文件夹"></a>压缩时排除某文件或文件夹</h3><p>zip -r server.zip <em> -x  ‘./output/</em>‘<br>-x参数后加要排除的文件或目录的完整路径。注意引号不可少。<br>参考文档： <a href="https://www.cnblogs.com/yuanwanli/p/12771220.html" target="_blank" rel="noopener">https://www.cnblogs.com/yuanwanli/p/12771220.html</a></p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><h3 id="显示进度："><a href="#显示进度：" class="headerlink" title="显示进度："></a>显示进度：</h3><p>pv question.tar.gz | tar -zxf -</p><h3 id="解压-tar-gz文件"><a href="#解压-tar-gz文件" class="headerlink" title="解压 tar.gz文件"></a>解压 tar.gz文件</h3><p>tar -zxvf ×××.tar.gz</p><h3 id="解压tar-bz2文件"><a href="#解压tar-bz2文件" class="headerlink" title="解压tar.bz2文件"></a>解压tar.bz2文件</h3><p>tar -jxvf ×××.tar.bz2</p><h3 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h3><h4 id="unzip不输出中间过程"><a href="#unzip不输出中间过程" class="headerlink" title="unzip不输出中间过程"></a>unzip不输出中间过程</h4><p>unzip *.zip &gt; /dev/null</p><h4 id="解压强制覆盖："><a href="#解压强制覆盖：" class="headerlink" title="解压强制覆盖："></a>解压强制覆盖：</h4><p>unzip -o **.zip</p><h4 id="解压至指定文件夹"><a href="#解压至指定文件夹" class="headerlink" title="解压至指定文件夹"></a>解压至指定文件夹</h4><p>unzip -d /temp test.zip</p><h2 id="zip分卷压缩和解压缩"><a href="#zip分卷压缩和解压缩" class="headerlink" title="zip分卷压缩和解压缩"></a><strong>zip分卷压缩和解压缩</strong></h2><h3 id="创建分卷压缩文件"><a href="#创建分卷压缩文件" class="headerlink" title="创建分卷压缩文件"></a><strong>创建分卷压缩文件</strong></h3><p>zip -s 100m -r folder.zip folder/</p><p>其中：</p><p>- -s: 创建分卷的大小</p><p>- -r: 循环压缩文件夹的内容x</p><p>另，切分已压缩的zip：</p><p>zip existing.zip —out new.zip -s 50m</p><p>执行后会创建下列文件：</p><p>new.zip</p><p>new.z01</p><p>new.z02</p><p>new.z03</p><p>…</p><h3 id="解压分卷文件"><a href="#解压分卷文件" class="headerlink" title="解压分卷文件"></a><strong>解压分卷文件</strong></h3><p>- step1: 将分卷文件合并成一个单独文件:</p><p>zip -s 0 split.zip —out single.zip</p><p>- step2: 解压文件：</p><p>unzip single.zip</p><h1 id="获取进程的pid"><a href="#获取进程的pid" class="headerlink" title="获取进程的pid"></a><strong>获取进程的pid</strong></h1><ol><li>ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义</li></ol><p>-A 列出所有的进程</p><p>-w 显示加宽可以显示较多的资讯</p><p>-au 显示较详细的资讯</p><p>-aux 显示所有包含其他使用者的进程</p><ol><li>查找指定进程格式：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep 进程关键字</span><br></pre></td></tr></table></figure><h1 id="awk"><a href="#awk" class="headerlink" title="awk:"></a><strong>awk:</strong></h1><p>参考文档：<a href="https://www.runoob.com/linux/linux-comm-awk.html" target="_blank" rel="noopener">https://www.runoob.com/linux/linux-comm-awk.html</a></p><h1 id="pv"><a href="#pv" class="headerlink" title="pv"></a><strong>pv</strong></h1><p><a href="https://wangchujiang.com/linux-command/c/pv.html" target="_blank" rel="noopener">https://wangchujiang.com/linux-command/c/pv.html</a></p><h1 id="重定向-gt-和-管道（｜）"><a href="#重定向-gt-和-管道（｜）" class="headerlink" title="重定向(&gt;) 和 管道（｜）"></a><strong>重定向(&gt;) 和 管道（｜）</strong></h1><p><a href="https://murphypei.github.io/blog/2018/04/linux-redirect-pipe" target="_blank" rel="noopener">https://murphypei.github.io/blog/2018/04/linux-redirect-pipe</a></p><h1 id="查看内存大小"><a href="#查看内存大小" class="headerlink" title="查看内存大小"></a><strong>查看内存大小</strong></h1><p>free -h</p><h1 id="复制强制覆盖"><a href="#复制强制覆盖" class="headerlink" title="复制强制覆盖"></a><strong>复制强制覆盖</strong></h1><p>/bin/cp -rf xxxx</p><h1 id="top"><a href="#top" class="headerlink" title="top"></a><strong>top</strong></h1><ol><li>在第三行有显示CPU当前的使用情况.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@li676-235 ~]# top -bn 1 -i -c</span><br><span class="line"></span><br><span class="line">top - 14:19:51 up 138 days, 7:15, 1 user, load average: 0.20, 0.33, 0.39</span><br><span class="line">g</span><br><span class="line">Tasks: 115 total, 1 running, 114 sleeping, 0 stopped, 0 zombie</span><br><span class="line"></span><br><span class="line">Cpu(s): 4.5%us, 3.8%sy, 0.0%ni, 91.0%id, 0.6%wa, 0.0%hi, 0.0%si, 0.0%st</span><br><span class="line"></span><br><span class="line">Mem: 1014660k total, 880512k used, 134148k free, 264904k buffers</span><br><span class="line"></span><br><span class="line">Swap: 262140k total, 34788k used, 227352k free, 217144k cached</span><br><span class="line"></span><br><span class="line">PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND </span><br><span class="line"></span><br><span class="line">12760 root 20 0 15084 1944 1632 R 2.0 0.2 0:00.01 top -bn 1 -i -c</span><br><span class="line"></span><br><span class="line">root@li676-235 ~]# top -bn 1 -i -c</span><br><span class="line"></span><br><span class="line">top - 14:19:51 up 138 days, 7:15, 1 user, load average: 0.20, 0.33, 0.39</span><br><span class="line"></span><br><span class="line">Tasks: 115 total, 1 running, 114 sleeping, 0 stopped, 0 zombie</span><br><span class="line"></span><br><span class="line">Cpu(s): 4.5%us, 3.8%sy, 0.0%ni, 91.0%id, 0.6%wa, 0.0%hi, 0.0%si, 0.0%st</span><br><span class="line"></span><br><span class="line">Mem: 1014660k total, 880512k used, 134148k free, 264904k buffers</span><br><span class="line"></span><br><span class="line">Swap: 262140k total, 34788k used, 227352k free, 217144k cached</span><br><span class="line"></span><br><span class="line">PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND </span><br><span class="line"></span><br><span class="line">12760 root 20 0 15084 1944 1632 R 2.0 0.2 0:00.01 top -bn 1 -i -c</span><br></pre></td></tr></table></figure><p>如上所示，top命令可以看到总体的系统运行状态和cpu的使用率 。</p><p>%us：表示用户空间程序的cpu使用率（没有通过nice调度）</p><p>%sy：表示系统空间的cpu使用率，主要是内核程序。</p><p>%ni：表示用户空间且通过nice调度过的程序的cpu使用率。</p><p>%id：空闲cpu</p><p>%wa：cpu运行时在等待io的时间</p><p>%hi：cpu处理硬中断的数量</p><p>%si：cpu处理软中断的数量</p><p>%st：被虚拟机偷走的cpu</p><p>参考文档： <a href="https://blog.csdn.net/AlbenXie/article/details/72885951" target="_blank" rel="noopener">https://blog.csdn.net/AlbenXie/article/details/72885951</a></p><ol><li>切换内存显示单位</li></ol><p>在输入top后，输入E.</p><h1 id="find-1"><a href="#find-1" class="headerlink" title="find"></a>find</h1><h2 id="递归查找文件数量"><a href="#递归查找文件数量" class="headerlink" title="递归查找文件数量"></a>递归查找文件数量</h2><p>find ./ -type f | wc -l</p><h2 id="递归深度为3，-查找的是文件夹"><a href="#递归深度为3，-查找的是文件夹" class="headerlink" title="递归深度为3， 查找的是文件夹"></a>递归深度为3， 查找的是文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find  ./  -maxdepth 3 -<span class="built_in">type</span> d</span><br></pre></td></tr></table></figure><h1 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a><strong>GPU</strong></h1><h2 id="bad-GPU"><a href="#bad-GPU" class="headerlink" title="bad GPU"></a><strong>bad GPU</strong></h2><p>不支持很多算法：</p><ol><li>RTX 3060</li></ol><h2 id="看cuda版本"><a href="#看cuda版本" class="headerlink" title="看cuda版本"></a>看cuda版本</h2><p>nvcc -V 或 nvcc —version</p><h2 id="持续观测GPU"><a href="#持续观测GPU" class="headerlink" title="持续观测GPU:"></a>持续观测GPU:</h2><p>nvidia-smi -lms 或 watch -n 1 -d nvidia-smi</p><h1 id="mtime"><a href="#mtime" class="headerlink" title="-mtime"></a>-mtime</h1><p>find -mtime +1 # 查找修改日期一天以外的文件</p><p>find -mtime -1 # 查找修改日期一天以内的文件</p><p>find -mtime -2 # 查找修改日期在之前第二天的文件</p><h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a><strong>sed</strong></h1><p>示例：</p><p>$cat a.txt</p><p>Hello!</p><p>ruby is me,welcome to my blog.</p><p>end</p><ol><li>set ‘1d’ a.txt删除第一行</li><li>sed -n ‘1p’ a.txt显示第一行</li><li>sed -n ‘/ruby/p’ a.txt查询包括关键字ruby所在所有行</li><li>sed ‘1a drink tea’ a.txt第一行后增加字符串”drink tea”</li><li>sed ‘1c Hi’ a.txt第一行代替为Hi</li><li>sed -n ‘/ruby/p’ a.txt   | sed ‘s/ruby/bird/g’替换ruby为bird</li><li>sed -i ‘/匹配字符串/d’  a.txt删除匹配行</li><li>sed -i ‘/匹配字符串/s/替换源字符串/替换目标字符串/g’ a.txt<br>替换匹配行中的某个字符串</li></ol><p>参考文档： <a href="https://www.cnblogs.com/dong008259/archive/2011/12/07/2279897.html" target="_blank" rel="noopener">https://www.cnblogs.com/dong008259/archive/2011/12/07/2279897.html</a></p><h1 id="拷贝指定个数"><a href="#拷贝指定个数" class="headerlink" title="拷贝指定个数"></a>拷贝指定个数</h1><p>ls |head -n 100|xargs -i cp {} /tmp</p><p>ls |tail -n 100|xargs -i cp {} /tmp</p><p>参考文档： <a href="https://blog.csdn.net/weixin_41770169/article/details/93171102" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41770169/article/details/93171102</a></p><h1 id="命令别名-alias"><a href="#命令别名-alias" class="headerlink" title="命令别名 alias"></a><strong>命令别名 alias</strong></h1><p>等号左右不可有多余空格：</p><p>alias lsl=’ls -al’</p><p>alias coder=’code —user-data-dir=”~/.vscode-root”‘</p><p>参考文档： <a href="https://blog.csdn.net/u013894429/article/details/79908554" target="_blank" rel="noopener">https://blog.csdn.net/u013894429/article/details/79908554</a></p><h1 id="查看cpu信息"><a href="#查看cpu信息" class="headerlink" title="查看cpu信息"></a><strong>查看cpu信息</strong></h1><p>cat /proc/cpuinfo</p><h2 id="查看物理cpu数量"><a href="#查看物理cpu数量" class="headerlink" title="查看物理cpu数量"></a><strong>查看物理cpu数量</strong></h2><p>cat /proc/cpuinfo| grep “physical id”| sort| uniq| wc -l</p><h2 id="查看逻辑CPU个数"><a href="#查看逻辑CPU个数" class="headerlink" title="查看逻辑CPU个数"></a><strong>查看逻辑CPU个数</strong></h2><p>cat /proc/cpuinfo| grep “processor”| wc -l</p><h2 id="查看CPU核心数"><a href="#查看CPU核心数" class="headerlink" title="查看CPU核心数"></a><strong>查看CPU核心数</strong></h2><p>cat /proc/cpuinfo| grep “cpu cores”| uniq</p><p>参考文档： <a href="https://blog.csdn.net/qq_42137575/article/details/124127423\" target="_blank" rel="noopener">https://blog.csdn.net/qq_42137575/article/details/124127423\</a></p><h1 id="find-2"><a href="#find-2" class="headerlink" title="find"></a><strong>find</strong></h1><h2 id="Only-current-dir-no-recursion"><a href="#Only-current-dir-no-recursion" class="headerlink" title="Only current dir, no recursion."></a><strong>Only current dir, no recursion.</strong></h2><p>find . -name “*.jpg” -maxdepth 1 -print</p><h2 id="查找指定目录软连接，如："><a href="#查找指定目录软连接，如：" class="headerlink" title="查找指定目录软连接，如："></a>查找指定目录软连接，如：</h2><p>find / -type |</p><p>其中|代表软连接，f普通文件，d目录</p><h1 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h1><ol><li>alias时，先要查看新的命令是否已经存在。</li></ol><h1 id="Show-time"><a href="#Show-time" class="headerlink" title="Show time"></a>Show time</h1><p>Date</p><h1 id="赛飞的操作"><a href="#赛飞的操作" class="headerlink" title="赛飞的操作"></a>赛飞的操作</h1><h2 id="选择时区"><a href="#选择时区" class="headerlink" title="选择时区"></a>选择时区</h2><ol><li>Firstly ,run <code>tzselect</code> ，observe whether it works.</li><li>if not, unzip youjincheng749/zoneinfo.zip into  /usr/share</li><li>Again run <code>tzselect</code> .</li><li>Finally, it’s needed to add: <code>TZ=&#39;Asia/Shanghai&#39;; export TZ</code></li></ol><h1 id="source"><a href="#source" class="headerlink" title="source"></a>source</h1><ol><li><p>if Source is able in bash file , you need to run the bash file by source.</p><p>Example: <code>source startup.sh</code></p></li><li>Source can be replace with <code>.</code>, Example: <code>. startup.sh</code></li></ol><p>Refs: <a href="https://books.sangniao.com/manual/2242791532/52586277" target="_blank" rel="noopener">https://books.sangniao.com/manual/2242791532/52586277</a></p><h1 id="Get-help-info"><a href="#Get-help-info" class="headerlink" title="Get help info"></a>Get help info</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure><h1 id="View-the-newest-10-files"><a href="#View-the-newest-10-files" class="headerlink" title="View the newest 10 files"></a>View the newest 10 files</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">type</span> file | xargs ls -lta | head -10</span><br></pre></td></tr></table></figure><h1 id="Show-lines-number"><a href="#Show-lines-number" class="headerlink" title="Show lines number"></a>Show lines number</h1><p>wc: word count, can counts the number of lines, words, and bytes in a file or a standard input.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wc -l example.txt</span><br><span class="line">some_command | wc -l</span><br></pre></td></tr></table></figure><h1 id="Redirect-amp-Pipeline"><a href="#Redirect-amp-Pipeline" class="headerlink" title="Redirect &amp; Pipeline"></a>Redirect &amp; Pipeline</h1><h2 id="File-descriptor"><a href="#File-descriptor" class="headerlink" title="File descriptor"></a>File descriptor</h2><p>0: standard input(keyboard)</p><p>1: standard output(screen)</p><p>2: standard error(screen)</p><h2 id="Redirect-Examples"><a href="#Redirect-Examples" class="headerlink" title="Redirect Examples"></a>Redirect Examples</h2><ol><li><p>Output std output into sucess.txt, output std error into fail.txt.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt 1 &gt; success.txt 2 &gt; fail.txt</span><br></pre></td></tr></table></figure></li><li><p>Output std output into result.txt, output std error into screen.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt  &gt; result.txt</span><br></pre></td></tr></table></figure></li><li><p>Don’t output std error.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt 2 &gt; /dev/null</span><br></pre></td></tr></table></figure><p>Equal to:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt 2 &gt; &amp;-</span><br></pre></td></tr></table></figure></li><li><p>Close all output:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt 1 &gt; /dev/null 2 &gt; /dev/null</span><br></pre></td></tr></table></figure><p>Equal to:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt 1 &gt; &amp;- 2 &gt; &amp;-</span><br></pre></td></tr></table></figure><p>Equal to:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls exists.txt no-exists.txt 2 &gt; &amp;1 1 &gt; /dev/null</span><br></pre></td></tr></table></figure></li></ol><h2 id="Input-redirect-examples"><a href="#Input-redirect-examples" class="headerlink" title="Input redirect examples"></a>Input redirect examples</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; output.txt  &lt; input.txt</span><br></pre></td></tr></table></figure><h2 id="Binding-redirect"><a href="#Binding-redirect" class="headerlink" title="Binding redirect"></a>Binding redirect</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span> 6 &gt; &amp;1</span><br><span class="line"><span class="built_in">exec</span> 1 &gt; success.txt</span><br><span class="line"><span class="built_in">exec</span> 1 &gt; &amp;6</span><br></pre></td></tr></table></figure><h2 id="tee"><a href="#tee" class="headerlink" title="tee"></a>tee</h2><p>Function: Make output infos redirect into screen and file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls | tee test.out</span><br></pre></td></tr></table></figure><p>Refs: <a href="https://codeantenna.com/a/TlMgasD3R9" target="_blank" rel="noopener">https://codeantenna.com/a/TlMgasD3R9</a></p><h2 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h2><p>find . -type f -name “*.log” | xargs -i cp {} /tmp/k/</p><p>ls *.txt | xargs -i mv {} /mnt</p><p>echo “ni|shi|shui” | xargs -d”|” -n2</p><p>find . -name “*.txt” | xargs -i tar cf b.tar {}</p><p>ls | xargs -n 50 -i rm -rf {}</p><p>Attention:</p><ol><li>On Mac, xargs don’t need <code>-i</code>  after <code>xargs</code></li></ol><p>参考文档： <a href="https://www.cnblogs.com/xiaofeng666/p/10800939.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaofeng666/p/10800939.html</a></p><h2 id="Notices"><a href="#Notices" class="headerlink" title="Notices"></a>Notices</h2><ol><li>‘&gt;’ : overwrite, ‘&gt;&gt;’: append</li><li>The priority of <strong>Redirect</strong> is greater than <strong>Pipeline</strong>.</li></ol><h2 id="Need-to-read"><a href="#Need-to-read" class="headerlink" title="Need to read"></a>Need to read</h2><ol><li><a href="https://www.cnblogs.com/pengliangcheng/p/5211786.html" target="_blank" rel="noopener">https://www.cnblogs.com/pengliangcheng/p/5211786.html</a></li></ol><p><strong>Refs:</strong> <a href="https://murphypei.github.io/blog/2018/04/linux-redirect-pipe.html" target="_blank" rel="noopener">https://murphypei.github.io/blog/2018/04/linux-redirect-pipe.html</a></p><h1 id="Name"><a href="#Name" class="headerlink" title="Name"></a>Name</h1><h2 id="du"><a href="#du" class="headerlink" title="du"></a>du</h2><p>du: disk usage</p><p>-h: “human-readable”</p><h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><p>df: disk free</p><h1 id="bin"><a href="#bin" class="headerlink" title="bin"></a>bin</h1><p> binary</p><h1 id="Commond-Documents"><a href="#Commond-Documents" class="headerlink" title="Commond Documents"></a>Commond Documents</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man du</span><br></pre></td></tr></table></figure><h1 id="Nas"><a href="#Nas" class="headerlink" title="Nas"></a>Nas</h1><h2 id="挂载nas"><a href="#挂载nas" class="headerlink" title="挂载nas:"></a>挂载nas:</h2><p> mkdir /dataset &amp;&amp; mount -o nolock -t nfs 30.64.90.5:/cnas_pamd_core_id101154_vol1004_dev/ /dataset</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux操作的经验记录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://huzhenyou.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://huzhenyou.github.io/tags/Linux/"/>
    
      <category term="system" scheme="https://huzhenyou.github.io/tags/system/"/>
    
  </entry>
  
</feed>
