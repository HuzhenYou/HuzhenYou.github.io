<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>九万里</title>
  
  <subtitle>虚怀若谷，大智若愚</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huzhenyou.github.io/"/>
  <updated>2023-09-09T11:05:03.296Z</updated>
  <id>https://huzhenyou.github.io/</id>
  
  <author>
    <name>AngryBirds</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BMN详解</title>
    <link href="https://huzhenyou.github.io//blog/2023/08/BMN%E8%AF%A6%E8%A7%A3.html"/>
    <id>https://huzhenyou.github.io//blog/2023/08/BMN详解.html</id>
    <published>2023-08-13T07:34:05.000Z</published>
    <updated>2023-09-09T11:05:03.296Z</updated>
    
    <content type="html"><![CDATA[<p>BMN(Boundary-Matching Network) 详解。</p><a id="more"></a><hr><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>百度，ActivityNet Challenge 2019 冠军模型：BMN: Boundary-Matching Network for Temporal Action Proposal Generation。</p><h2 id="Problem-Formulation"><a href="#Problem-Formulation" class="headerlink" title="Problem Formulation"></a>Problem Formulation</h2><ol><li>Unlike temporal action detection task, in the work categories of action instances are not taken into account in proposal generation task.</li><li><p>The temporal annotation:  </p><script type="math/tex; mode=display">\Psi_g=\left \{ \varphi_n=(t_{s,n}, t_{e,n})  \right \} ^{N_g}_{n=1}</script><p> , here </p><script type="math/tex; mode=display">N_g</script><p> is  the amount of ground-truth action instances.</p></li><li><p>During inference, proposal generation method should generate proposals </p><script type="math/tex; mode=display">\Psi_p</script><p> which cover  </p><script type="math/tex; mode=display">\Psi_g</script><p> precisely and exhaustively.</p></li></ol><h2 id="网络结构："><a href="#网络结构：" class="headerlink" title="网络结构："></a>网络结构：</h2><p><img src="/imgs/Pasted image 20230807194737.png" alt><br><img src="/imgs/Pasted image 20230807194836.png" alt></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li>Feature Extraction: 使用双流网络（光流+RGB），获得feature map.</li><li>Base Module： 1x1卷积（时序卷积）。</li><li>Temporal Evaluation Module(TEM)： 1x1卷积（时序卷积），获得开始、结束点的概率序列。</li><li>Proposal Evaluation Module(PEM)：<ol><li>[[PapersRead#BMN#BM layer|BM layer]]</li><li>通过conv3d, conv2d 得到置信度图。</li></ol></li><li><p>生成结果：</p><ol><li><p>把两条边界概率序列中大于</p><script type="math/tex; mode=display">极大值\times  \frac{1}{2}</script><p> 或是峰值（极大值）的都看作开始或结束边界.</p></li><li><script type="math/tex; mode=display">n^2$$复杂度两两组合，获得一系列proposals:</script></li><li><p>根据置信度图获得各个proposals的置信度。</p><ol><li><p>the proposal denoted: </p><script type="math/tex; mode=display">φ = (t_s, t_e, p^s_{ts} , p^e_{te} , p_{cc}, p_{cr})</script></li></ol></li></ol></li></ol><pre><code>     where      $$     p^s_{ts},  p^e_{te}     $$      are starting and ending probabilities.       $$     p_{cc}, p_{cr}     $$      are classification confidence and regression confidence score.  2. get final score:      $$     p_f = p^s_{ts} · p^e_{te} · \sqrt{p_{cc}· p_{cr})}     $$</code></pre><ol><li>利用Soft-NMS去冗余。</li></ol><h2 id="置信度图："><a href="#置信度图：" class="headerlink" title="置信度图："></a>置信度图：</h2><p><img src="/imgs/Pasted image 20230807202541.png" alt></p><ol><li><script type="math/tex; mode=display">M_C\in R^{D×T}</script></li><li>由开始点和长度决定结束点，从而确定一个proposal. 所以上图对应所有任意视频段的置信度。</li><li>duration dim: proposal长度.</li><li>starting dim: 开始点位置。</li><li>同一行对应的proposals对应相同的长度。同一列队对应的proposals拥有相同的开始点。同一负对角线对应的proposals拥有相同的结束边界。右下角部分proposals超出视频范围，无意义。</li></ol><h2 id="BM-layer"><a href="#BM-layer" class="headerlink" title="BM layer"></a>BM layer</h2><ol><li><p>The goal: uniformly sample N points in </p><script type="math/tex; mode=display">S_{F} ∈ R^{C×T}</script><p>  between starting boundary </p><script type="math/tex; mode=display">t_{s}</script><p> and ending boundary </p><script type="math/tex; mode=display">t_{e}</script><p> of each proposal </p><script type="math/tex; mode=display">φ_{i,j}</script><p>, and get proposal feature </p><script type="math/tex; mode=display">m^f_{i,j} ∈ R^{C×N}</script><p> with rich context (actually sampling in [</p><script type="math/tex; mode=display">t_S-0.25d, t_e+0.25d</script><p>]).<br><img src="/imgs/Pasted image 20230810081026.png" alt></p></li><li><p>two problems:</p><ol><li>how to sample feature in non-integer point:<br><img src="/imgs/Pasted image 20230808205131.png" alt="Pasted image 20230808205131"></li><li><p>how to sample feature for all proposals simultaneously:</p><ol><li><p>expanding </p><script type="math/tex; mode=display">w_{i,j} ∈ R^{N ×T}</script><p>  to  </p><script type="math/tex; mode=display">W ∈ R^{N ×T ×D×T}</script><p> for all proposals in BM confidence map.</p></li><li><p>get </p><script type="math/tex; mode=display">M_F ∈ R^{C×N×D×T}</script><p> by using dot product:   </p><script type="math/tex; mode=display">S_{F} ∈ R^{C×T}</script><p> and  </p><script type="math/tex; mode=display">W^T ∈ R^{T×N×D×T}</script><p>. （<em><script type="math/tex">W</script> can be pre-generated because it’s the same for different videos, the inference speed of BM layer is very fast.</em> Is T is the same for the different videos? Ans: [[#BMN#Base module|Base module]] and [[#BMN#Training of BMN#Training Data Construction|Training Data Construction]]. TODO: review code）</p></li></ol></li></ol></li></ol><h2 id="Base-module"><a href="#Base-module" class="headerlink" title="Base module"></a>Base module</h2><ol><li><p>*adopt a long observation window with length </p><script type="math/tex; mode=display">l_ω</script><p> to truncate the untrimmed feature sequence with length </p><script type="math/tex; mode=display">l_f</script><p> .*</p></li><li><p>So here </p><script type="math/tex; mode=display">l_w</script><p> is </p><script type="math/tex; mode=display">T$$ in</script><p>S_{F} ∈ R^{C×T}$$.</p></li></ol><h2 id="Proposal-Evaluation-Module-PEM"><a href="#Proposal-Evaluation-Module-PEM" class="headerlink" title="Proposal Evaluation Module(PEM)"></a>Proposal Evaluation Module(PEM)</h2><ol><li><p>Final generate: </p><script type="math/tex; mode=display">M_C\in R^{D×T}</script><p>, but there are two predicted </p><script type="math/tex; mode=display">M_C</script><p>: </p><script type="math/tex; mode=display">M_{CC}</script><p>, </p><script type="math/tex; mode=display">M_{CR}</script><p>, being trained using binary classification and regression loss function separately. TODO: review code.</p></li></ol><h2 id="Training-of-BMN"><a href="#Training-of-BMN" class="headerlink" title="Training of BMN"></a>Training of BMN</h2><h3 id="TEM-vs-PEM"><a href="#TEM-vs-PEM" class="headerlink" title="TEM vs PEM:"></a>TEM vs PEM:</h3><ol><li>TEM: learns local boundary.</li><li>PEM: pattern global proposal context.</li></ol><h3 id="Training-Data-Construction"><a href="#Training-Data-Construction" class="headerlink" title="Training Data Construction:"></a>Training Data Construction:</h3><ol><li>firstly, extract all feature sequence F with length.</li><li><p>get many observation windows with length </p><script type="math/tex; mode=display">l_w</script><p> with 50% overlap.</p></li><li>here every window contains at least one ground-truth action instance.</li></ol><h3 id="Label-Assignment"><a href="#Label-Assignment" class="headerlink" title="Label Assignment"></a>Label Assignment</h3><h4 id="TEM"><a href="#TEM" class="headerlink" title="TEM"></a>TEM</h4><ol><li><p>denote its starting and ending regions as </p><script type="math/tex; mode=display">r_S = [t_s − d_g /10, t_s +d_g/10]</script><p> and </p><script type="math/tex; mode=display">r_E =[t_e−d_g/10,t_e+d_g/10]</script><p>separately.</p></li><li><p>denote its local region as </p><script type="math/tex; mode=display">r_{t_n} = [t_n −d_f /2, t_n +d_f /2]</script><p>, where </p><script type="math/tex; mode=display">d_f = t_n −t_{n−1}</script><p> is the temporal interval between two locations.</p></li><li><p>Then calculate overlap ratio IoR of </p><script type="math/tex; mode=display">r_{t_n}</script><p> with </p><script type="math/tex; mode=display">r_S</script><p> and </p><script type="math/tex; mode=display">r_E</script><p> separately, and denote maximum IoR as </p><script type="math/tex; mode=display">g^s_{t_n}</script><p> and  </p><script type="math/tex; mode=display">g^e_{t_n}</script><p> separately.</p></li><li><em>here IoR is defined as the overlap ratio with ground-truth proportional to the duration of this region.</em> TODO: code review.</li><li><p>Thus generate </p><script type="math/tex; mode=display">G_{S,ω}=\{g^s_{t_n}\}^{l_w}_{n=1}</script><p> and </p><script type="math/tex; mode=display">G_{E,ω}=\{g^e_{t_n}\}^{l_w}_{n=1}</script><p>  as label of TEM.</p></li></ol><h4 id="PEM"><a href="#PEM" class="headerlink" title="PEM"></a>PEM</h4><ol><li><p>Purpose: BM label map </p><script type="math/tex; mode=display">G_C ∈ R^{D×T}</script><p>.</p></li><li><p>For a proposal </p><script type="math/tex; mode=display">φ_{i,j}=(t_s=t_j, t_e=t_j+t_i)</script><p> , calculate its IoU with all </p><script type="math/tex; mode=display">φ_g</script><p> in </p><script type="math/tex; mode=display">Ψ_ω</script><p>, and denote the maximum IoU as </p><script type="math/tex; mode=display">g^c_{i,j}</script><p> . Thus we can generate </p><script type="math/tex; mode=display">G_C=\{g^c_{i,j}\}^{D,l_ω}_{i,j=1}</script><p>  as label of PEM.</p></li></ol><h3 id="Loss"><a href="#Loss" class="headerlink" title="Loss"></a>Loss</h3><h4 id="Loss-of-TEM"><a href="#Loss-of-TEM" class="headerlink" title="Loss of TEM"></a>Loss of TEM</h4><ol><li><p>adopt weighted binary logistic regression loss function </p><script type="math/tex; mode=display">L_{bl}</script><p>,  to get the sum of starting and ending losses:</p><script type="math/tex; mode=display">L_{TEM} =L_{bl}(P_S,G_S)+L_{bl}(P_E,G_E)</script></li><li><script type="math/tex; mode=display">L_{bl}(P,G): \frac{1}{l_w}\sum_{i=1}^{l_w}(a^+·b_i·log(p_i)+a^-·(1-b_i)·log(1-p_i))</script><p>where </p><script type="math/tex; mode=display">b_i = sign(g_i − θ)</script><p> is a two-value function used to convert </p><script type="math/tex; mode=display">g_i</script><p> from [0, 1] to {0, 1}0, 1} based on overlap threshold</p><script type="math/tex; mode=display">θ = 0.5</script><p>. Denoting </p><script type="math/tex; mode=display">l^+=\sum b_i</script><p>  and </p><script type="math/tex; mode=display">l^− = l_ω −l^+</script><p>, the weighted terms are </p><script type="math/tex; mode=display">α^+ = \frac{l_w}{l^+}</script><p> and </p><script type="math/tex; mode=display">α^- = \frac{l_w}{l^-}</script><p>.</p></li></ol><h4 id="Loss-of-PEM"><a href="#Loss-of-PEM" class="headerlink" title="Loss of PEM"></a>Loss of PEM</h4><ol><li><p>Define:</p><script type="math/tex; mode=display">L_{PEM} =L_C(M_{CC},G_C)+λ·L_R(M_{CR},G_C)</script></li><li><p>here  </p><script type="math/tex; mode=display">L_{bl}</script><p>  for </p><script type="math/tex; mode=display">L_C</script><p>  ,  L2 loss for </p><script type="math/tex; mode=display">L_R</script><p> .  </p><script type="math/tex; mode=display">λ = 10</script><p> .</p></li><li><p>to balance the ratio between positive and negative samples in </p><script type="math/tex; mode=display">L_R</script><p> , take all points with </p><script type="math/tex; mode=display">g^C_{i,j}>0.6</script><p>  as positive, and randomly sample  </p><script type="math/tex; mode=display">g^C_{i,j}<0.2</script><p>  as negative, ensure 1:1 for positive: negative.</p></li></ol><h3 id="Training-Objective"><a href="#Training-Objective" class="headerlink" title="Training Objective"></a>Training Objective</h3><script type="math/tex; mode=display">\begin{aligned}L=L_{LEM} +λ_1 ·L_{GEM} +λ_2 ·L_2(Θ)\end{aligned}</script><p>where </p><script type="math/tex; mode=display">L_2(Θ)</script><p> is L2 regularization term,  </p><script type="math/tex; mode=display">λ_1</script><p>, </p><script type="math/tex; mode=display">λ_2</script><p> are set to 1, 0.000 to ensure different modules are trained evenly.</p><p>Refs:</p><ol><li><a href="https://zhuanlan.zhihu.com/p/337432552" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/337432552</a></li><li><a href="https://arxiv.org/pdf/1907.09702.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1907.09702.pdf</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BMN(Boundary-Matching Network) 详解。&lt;/p&gt;
    
    </summary>
    
      <category term="ActionDetection" scheme="https://huzhenyou.github.io/categories/ActionDetection/"/>
    
    
      <category term="ActionDetection" scheme="https://huzhenyou.github.io/tags/ActionDetection/"/>
    
      <category term="ProposalGeneration" scheme="https://huzhenyou.github.io/tags/ProposalGeneration/"/>
    
      <category term="ActivityNetChallenge2019" scheme="https://huzhenyou.github.io/tags/ActivityNetChallenge2019/"/>
    
      <category term="DeepLearning" scheme="https://huzhenyou.github.io/tags/DeepLearning/"/>
    
  </entry>
  
  <entry>
    <title>TriDet</title>
    <link href="https://huzhenyou.github.io//blog/2023/08/TriDet.html"/>
    <id>https://huzhenyou.github.io//blog/2023/08/TriDet.html</id>
    <published>2023-08-13T07:34:05.000Z</published>
    <updated>2023-09-10T00:59:03.958Z</updated>
    
    <content type="html"><![CDATA[<p>The detail of TriDet.</p><a id="more"></a><h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><ol><li>TriDet: Temporal Action Detection <strong>with</strong> Relative Boundary Modeling.</li><li><p>Temporal Action Detection(TAD)</p><ol><li>Detect all action boundaries and categories from an untrimmed video.<br><img src="/imgs/Pasted image 20230815192206.png" alt></li><li>The pipeline of TAD:<br><img src="/imgs/Pasted image 20230815192350.png" alt><ol><li>backbone:</li><li>use the pre-trained model in [[PoseEstimation_TAD#行为识别(Action Detection/Regnition)|Action Recognition Task]].</li><li>to get the feature map of each frame.</li></ol></li></ol></li><li><p>The core Focus of the author:</p><ol><li>get more accuracy boundary.</li><li>explore Transformer for TAD.</li></ol></li></ol><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><h2 id="Intro-1"><a href="#Intro-1" class="headerlink" title="Intro"></a>Intro</h2><ol><li>two classes by the method of boundary dividing for TAD works using Transformer:<ol><li>[[#Segment-level prediction]]</li><li>[[#Instance-level prediction]]</li></ol></li></ol><h2 id="Segment-level-prediction"><a href="#Segment-level-prediction" class="headerlink" title="Segment-level prediction"></a>Segment-level prediction</h2><ol><li>based on extracted feature maps, get a clip, and simple, global expression(e.g., pooling), finally judge whether the clip is the target.</li><li>e.g. both of the below are two-stage network(like Faster-Rcnn, one stage generate lots of proposals, the second stage regresses and classifies proposals):<ol><li>[[BMNDetail|BMN]]</li><li>PGCN：<ol><li>use GCN to refine every proposal.</li></ol></li></ol></li><li>The method can’t be trained end-to-end.</li><li>End-to-end:<ol><li>TadTR</li><li>ReAct</li></ol></li></ol><h2 id="Instance-level-prediction"><a href="#Instance-level-prediction" class="headerlink" title="Instance-level prediction"></a>Instance-level prediction</h2><h3 id="Anchor-free-Detection"><a href="#Anchor-free-Detection" class="headerlink" title="Anchor-free Detection"></a>Anchor-free Detection</h3><h4 id="AFSD"><a href="#AFSD" class="headerlink" title="AFSD"></a>AFSD</h4><p><img src="/imgs/Pasted image 20230824200202.png" alt></p><ol><li>predict the distance to the start or end boundary.</li><li>then make the position pointed by most other position as the boundary.</li></ol><h4 id="ActionFormer"><a href="#ActionFormer" class="headerlink" title="ActionFormer"></a>ActionFormer</h4><p><img src="/imgs/Pasted image 20230824195951.png" alt></p><ol><li>Using slide-window to apply self-attention.</li><li>In 2022, the work in TAD improved obviously.</li><li>So TriDet carry out based on the work.</li></ol><h3 id="Segmentation"><a href="#Segmentation" class="headerlink" title="Segmentation"></a>Segmentation</h3><p><img src="/imgs/Pasted image 20230824201525.png" alt></p><h4 id="MLAD"><a href="#MLAD" class="headerlink" title="MLAD"></a>MLAD</h4><ol><li>Apply self-attention in the time level dimension and the classes level dimension.</li><li>Add the two attentions of  the two level dimensions to build the final feature map.</li></ol><h4 id="MS-TCT"><a href="#MS-TCT" class="headerlink" title="MS-TCT"></a>MS-TCT</h4><ol><li>Add a CNN module after a traditional self-attention module.</li><li>Add residual connections.</li></ol><h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><ol><li>For the above  two works,  they both pay attention to modifying  the self-attention.</li><li>So, it indicates that the original self-attention cannot be applied to TAD.</li></ol><h2 id="Pros-and-Cons"><a href="#Pros-and-Cons" class="headerlink" title="Pros and Cons"></a>Pros and Cons</h2><h3 id="Segment-level-prediction-1"><a href="#Segment-level-prediction-1" class="headerlink" title="Segment-level prediction"></a>Segment-level prediction</h3><ol><li>Contain global representation of segments.</li><li>Larger receptive field.</li><li>More information.</li><li>Detailed Information at each instant is discarded.</li><li>Highly depend on the accuracy of segments.<br><img src="/imgs/Pasted image 20230829191215.png" alt></li></ol><h3 id="Instant-level-prediction"><a href="#Instant-level-prediction" class="headerlink" title="Instant-level prediction"></a>Instant-level prediction</h3><ol><li>Contain detailed representation of instants.</li><li>Smaller receptive field.</li><li>The requirement for feature distinguishability is high. (use the strong backbone to extract features.)</li><li>The degree of response varies greatly with different videos.</li></ol><h1 id="Motivation-of-Trident-head"><a href="#Motivation-of-Trident-head" class="headerlink" title="Motivation of Trident-head"></a>Motivation of Trident-head</h1><ol><li>Consider both instant-level and segment-level feature.</li><li>Set it as the segment-level feature that the predicted frame with the  fixed number of adjacent frames.</li><li>Set the segment-level feature as instant-level feature?</li></ol><h1 id="Trident-head"><a href="#Trident-head" class="headerlink" title="Trident-head"></a>Trident-head</h1><p><img src="/imgs/Pasted image 20230904090904.png" alt></p><ol><li>Three branch:<ol><li><code>&lt;font color=#FF8C00&gt;</code>Start Boundary <code>&lt;/font&gt;</code> and <code>&lt;font color=#FF8C00&gt;</code>End Boundary <code>&lt;/font&gt;</code> would extract the segment-level feature.</li><li><code>&lt;font color=#FF8C00&gt;</code>Center Offset<code>&lt;/font&gt;</code> would extract instance-level feature.</li></ol></li><li>E.G., Predicted <code>&lt;font color=Purple&gt;</code>Start Boundary <code>&lt;/font&gt;</code> is decided by <code>&lt;font color=#FF8C00&gt;</code>Start Boundary <code>&lt;/font&gt;</code> and <code>&lt;font color=#FF8C00&gt;</code>Center Offset<code>&lt;/font&gt;</code>:<br><img src="/imgs/Pasted image 20230904182444.png" alt></li><li>Expectation is decided by B:<ol><li>if B is too small, we can’t find the more far boundary.</li><li>if B is too big, the difficulty of  learning and convergence of training is more great, so that the predicted result is not accuracy.</li></ol></li><li>Combined with FPN:<br><img src="/imgs/Pasted image 20230904184206.png" alt><ol><li>In the different level layers, the fixed number of B is set to product different Bs, so it can have small and big Bs simultaneously.</li><li>While finally outputting, the predicted results in different layers times corresponding scale ratio to get real position.</li></ol></li></ol><h1 id="The-second-question-Attention-in-Temporal-Dimension"><a href="#The-second-question-Attention-in-Temporal-Dimension" class="headerlink" title="The second question: Attention in Temporal Dimension."></a>The second question: Attention in Temporal Dimension.</h1><ol><li>Many methods require complex attention mechanisms to make the network work.</li><li>The success of the previous transformer-based layers(in TAD) primarily relies on their macro-architecture, rather than the self-attention mechanism.<br><img src="/imgs/Pasted image 20230904193650.png" alt></li><li>Above, when 1D-Conv take the place of Self-attention, the Avg map only drops by 1.9, but  when CNN baseline takes the place of Transformer baseline, the Avg map drops very much,  which indicates that Transformer is effective depending to its structure not Self-attention.<br><img src="/imgs/4. ![[The Rank Loss Problem of Self Attention" alt><br>In TAD, making the features same is disastrous, because we need to distinguish a position is the action or not.</li><li><p>Pure LayerNorm will normalize the features $x\in R^n$ to a modulus $\sqrt{n}$ :<br>$x’ = LayerNorm(x)$</p><p>$x’<em>i = \frac{x_i-mean(x)}{\frac{1}{n} {\textstyle \sum</em>{n}^{}(x_i-mean(x))^2}}$</p><p>$\left | x’ \right | ^2<em>2 = {\textstyle \sum</em>{n}^{}x’^2_i}=n$</p></li><li><p>The Evidence on HACS:<br>we consider the cosine similarity:<br><img src="/imgs/Pasted image 20230904203951.png" alt></p><ol><li>here SA is Self-Attention, SGP is proposed by the author, BackB is the backbone network to extract the feature.</li><li>here the value is the average of the cosine similarity of every feature and average feature in the same layer ?</li></ol></li><li>Consider the Self Attention:<br>$V’=WV$<br>$W=Softmax(\frac{QK^T}{\sqrt{d}})$<br>W is non-negative and the sum of each row is 1, thus the $V’$ are [[ConceptAI#convex combination|convex combination]] for the input $V$.<br>But the value in Convolution kernel can be negative, and the sum can be not 1.</li></ol><h1 id="The-author’s-Solution-The-SGP-layer"><a href="#The-author’s-Solution-The-SGP-layer" class="headerlink" title="The author’s Solution: The SGP layer"></a>The author’s Solution: The SGP layer</h1><ol><li>increase the discrimination of feature.</li><li><p>capture temporal information with different scales of receptive fields.<br>$f<em>{SGP}=\Phi (x)FC(x)+\psi(x)(Conv_w(x)+Conv</em>{kw}(x))+x$,</p><p>$\Phi(x)=ReLU(FC(AvgPool(x)))$,</p><p>$\psi(x)=Conv_w(x)$</p><p>Window-level: make the network extract features in different scales adaptively.</p><p>In detail:</p><ol><li>the author uses the depth-wise convolution to reduce the computation of the network.</li><li>add a additional residual connection.</li></ol></li></ol><p><img src="/imgs/Pasted image 20230904211744.png" alt></p><h1 id="Experiment"><a href="#Experiment" class="headerlink" title="Experiment"></a>Experiment</h1><p>The performance is so good: the accuracy is higher, the speed is faster.</p><p><img src="/imgs/Pasted image 20230905084929.png" alt></p><p><img src="/imgs/Pasted image 20230905085657.png" alt></p><h1 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h1><ol><li><a href="https://www.bilibili.com/video/BV12M4y117GZ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=2c23be48ba22c91130ce4868020ab598" target="_blank" rel="noopener">https://www.bilibili.com/video/BV12M4y117GZ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=2c23be48ba22c91130ce4868020ab598</a>  (‘4.10)</li><li>Paper: <a href="https://arxiv.org/abs/2303.07347" target="_blank" rel="noopener">https://arxiv.org/abs/2303.07347</a></li><li>Code: <a href="https://github.com/dingfengshi/TriDet" target="_blank" rel="noopener">https://github.com/dingfengshi/TriDet</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The detail of TriDet.&lt;/p&gt;
    
    </summary>
    
      <category term="ActionDetection" scheme="https://huzhenyou.github.io/categories/ActionDetection/"/>
    
    
      <category term="ActionDetection" scheme="https://huzhenyou.github.io/tags/ActionDetection/"/>
    
      <category term="DeepLearning" scheme="https://huzhenyou.github.io/tags/DeepLearning/"/>
    
      <category term="CVPR2023" scheme="https://huzhenyou.github.io/tags/CVPR2023/"/>
    
      <category term="TemporalActionDetection" scheme="https://huzhenyou.github.io/tags/TemporalActionDetection/"/>
    
  </entry>
  
</feed>
